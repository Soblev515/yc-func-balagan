import n from"ydb-sdk";import{z as e}from"zod";function o(n,e,o,t){return new(o||(o=Promise))((function(r,i){function s(n){try{d(t.next(n))}catch(n){i(n)}}function a(n){try{d(t.throw(n))}catch(n){i(n)}}function d(n){var e;n.done?r(n.value):(e=n.value,e instanceof o?e:new o((function(n){n(e)}))).then(s,a)}d((t=t.apply(n,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const{Driver:t,TypedData:r,getCredentialsFromEnv:i,getLogger:s}=n,a=n=>r.createNativeObjects(n),d=n=>o(void 0,void 0,void 0,(function*(){const e=s({level:"debug"}),r=(()=>{const n=process.env.DB_ENDPOINT,e=process.env.DB_DATABASE,o=i();return new t({endpoint:n,database:e,authService:o})})();if(!(yield r.ready(1e4))){const n="Driver has not become ready in 10 seconds!";throw e.fatal(n),new Error(n)}const d=yield r.tableClient.withSession((e=>o(void 0,void 0,void 0,(function*(){var o;const t=yield e.prepareQuery(n);return(null!==(o=(yield e.executeQuery(t)).resultSets)&&void 0!==o?o:[]).map(a)}))));return r.destroy(),d})),l=e.object({login:e.string(),password:e.string(),name:e.string().optional()}),u=function(n,e){return o(this,void 0,void 0,(function*(){const n=e.getPayload();console.log("headers:"+n);const o=l.parse(n),[t]=yield d((r=o.login,`\n    DECLARE $login AS String;\n    $login = "${r}";\n    SELECT Count(user_id)\n    From \`auth\` \n    Where login = $login;\n`));var r;console.log(o.login),console.log("count:"+t[0].column0);const[i]=yield d("\n    DECLARE $login AS String;\n    SELECT Max(user_id) \n    From `auth`;\n"),s=Number(i[0].column0)+1;if(console.log("id:"+i[0].column0),0!=t[0].column0)return{statusCode:409,body:JSON.stringify("User with this login already exists")};const a=((n,{login:e,password:o,name:t})=>`\n    DECLARE $user_id AS String;\n    DECLARE $login AS String;\n    DECLARE $password AS String;\n    DECLARE $name AS String;\n\n    $user_id = "${n}";\n    $login = "${e}";\n    $password = "${o}";\n    $name = "${t}";\n    -- Create/Update content block\n    UPSERT INTO \`auth\` (user_id, login, password)\n    VALUES ($user_id, $login, $password);\n    -- Create/Update content block\n    UPSERT INTO \`users\` (user_id, name, city, verify)\n    VALUES ($user_id, $name, "Екатеринбург", false);\n`)(s.toString(),o);return yield d(a),{statusCode:200,body:JSON.stringify("Ok")}}))};export{u as handler};
