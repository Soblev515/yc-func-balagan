import t from"ydb-sdk";import{z as e}from"zod";function n(t,e,n,s){return new(n||(n=Promise))((function(i,o){function r(t){try{u(s.next(t))}catch(t){o(t)}}function a(t){try{u(s.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,a)}u((s=s.apply(t,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const{Driver:s,TypedData:i,getCredentialsFromEnv:o,getLogger:r}=t,a=t=>i.createNativeObjects(t),u=t=>n(void 0,void 0,void 0,(function*(){const e=r({level:"debug"}),i=(()=>{const t=process.env.DB_ENDPOINT,e=process.env.DB_DATABASE,n=o();return new s({endpoint:t,database:e,authService:n})})();if(!(yield i.ready(1e4))){const t="Driver has not become ready in 10 seconds!";throw e.fatal(t),new Error(t)}const u=yield i.tableClient.withSession((e=>n(void 0,void 0,void 0,(function*(){var n;const s=yield e.prepareQuery(t);return(null!==(n=(yield e.executeQuery(s)).resultSets)&&void 0!==n?n:[]).map(a)}))));return i.destroy(),u})),d=e.object({event_id:e.string(),status:e.string()}),v=function(t,e){return n(this,void 0,void 0,(function*(){const t=d.parse(e.getPayload());if("confirm"!=t.status&&"cancel"!=t.status)return{statusCode:409,body:"unknown status"};if(console.log(t.status),"confirm"==t.status){const e=(({event_id:t,status:e})=>`\n    DECLARE $event_id AS String;\n    DECLARE $status AS String;\n    $event_id = "${t}";\n    $status = "${e}";\n\n    UPSERT INTO event_status (event_id, status)\n    Values ($event_id, $status);\n    \n    UPSERT INTO event (event_id, visible)\n    Values ($event_id, true)\n`)(t);yield u(e)}else if("cancel"==t.status){const e=(({event_id:t,status:e})=>`\n    DECLARE $event_id AS String;\n    DECLARE $status AS String;\n    $event_id = "${t}";\n    $status = "${e}";\n\n    UPSERT INTO event_status (event_id, status)\n    Values ($event_id, $status);\n    \n    UPSERT INTO event (event_id, visible)\n    Values ($event_id, false)\n`)(t);yield u(e)}return{statusCode:200,body:"Ok"}}))};export{v as handler};
