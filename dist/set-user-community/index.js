import n from"ydb-sdk";import{z as e}from"zod";function o(n,e,o,t){return new(o||(o=Promise))((function(r,i){function s(n){try{u(t.next(n))}catch(n){i(n)}}function d(n){try{u(t.throw(n))}catch(n){i(n)}}function u(n){var e;n.done?r(n.value):(e=n.value,e instanceof o?e:new o((function(n){n(e)}))).then(s,d)}u((t=t.apply(n,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const{Driver:t,TypedData:r,getCredentialsFromEnv:i,getLogger:s}=n,d=n=>r.createNativeObjects(n),u=n=>o(void 0,void 0,void 0,(function*(){const e=s({level:"debug"}),r=(()=>{const n=process.env.DB_ENDPOINT,e=process.env.DB_DATABASE,o=i();return new t({endpoint:n,database:e,authService:o})})();if(!(yield r.ready(1e4))){const n="Driver has not become ready in 10 seconds!";throw e.fatal(n),new Error(n)}const u=yield r.tableClient.withSession((e=>o(void 0,void 0,void 0,(function*(){var o;const t=yield e.prepareQuery(n);return(null!==(o=(yield e.executeQuery(t)).resultSets)&&void 0!==o?o:[]).map(d)}))));return r.destroy(),u})),c=e.object({community_id:e.string()}),a=function(n,e){return o(this,void 0,void 0,(function*(){const o=c.parse(e.getPayload()),t=atob(n.headers.Authorization.split(" ")[1]).split(":"),r=(i=t[0],s=t[1],`\n    DECLARE $login AS String;\n    DECLARE $password AS String;\n\n    $login = "${i}";\n    $password = "${s}";\n\n    SELECT user_id FROM auth \n    WHERE login = $login \n    AND password = $password\n`);var i,s;const d=yield u(r);console.log(d[0][0].user_id),console.log(d[0].user_id);const a=((n,{community_id:e})=>`\n    DECLARE $community_id AS String;\n    DECLARE $user_id AS String;\n\n    $user_id = "${n}";\n    $community_id = "${e}";\n    \n    UPSERT INTO user_community (user_id, community_id, role_id)\n    Values ($user_id, $community_id, "member")\n`)(d[0][0].user_id,o);return yield u(a),{statusCode:200,body:"Ok"}}))};export{a as handler};
