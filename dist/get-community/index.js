import n from"ydb-sdk";import{z as t}from"zod";function e(n,t,e,i){return new(e||(e=Promise))((function(o,r){function s(n){try{u(i.next(n))}catch(n){r(n)}}function d(n){try{u(i.throw(n))}catch(n){r(n)}}function u(n){var t;n.done?o(n.value):(t=n.value,t instanceof e?t:new e((function(n){n(t)}))).then(s,d)}u((i=i.apply(n,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const{Driver:i,TypedData:o,getCredentialsFromEnv:r,getLogger:s}=n,d=n=>o.createNativeObjects(n),u=n=>e(void 0,void 0,void 0,(function*(){const t=s({level:"debug"}),o=(()=>{const n=process.env.DB_ENDPOINT,t=process.env.DB_DATABASE,e=r();return new i({endpoint:n,database:t,authService:e})})();if(!(yield o.ready(1e4))){const n="Driver has not become ready in 10 seconds!";throw t.fatal(n),new Error(n)}const u=yield o.tableClient.withSession((t=>e(void 0,void 0,void 0,(function*(){var e;const i=yield t.prepareQuery(n);return(null!==(e=(yield t.executeQuery(i)).resultSets)&&void 0!==e?e:[]).map(d)}))));return o.destroy(),u})),c=t.object({community_id:t.string()}),a=function(n,t){return e(this,void 0,void 0,(function*(){const t=c.parse(n.queryStringParameters),e=(({community_id:n})=>`\n    DECLARE $community_id AS String;\n\n    $community_id = "${n}";\n\n    SELECT * FROM \`community\` WHERE community_id = $community_id;\n`)(t),i=yield u(e),o=(({community_id:n})=>`\n    DECLARE $community_id AS String;\n\n    $community_id = "${n}";\n\n    SELECT u.* FROM \`users\` as u \n    Left Join \`user_community\` as uc\n    On u.user_id = uc.user_id\n    WHERE community_id = $community_id;\n`)(t),r=yield u(o),s=atob(n.headers.Authorization.split(" ")[1]).split(":"),d=(a=s[0],m=s[1],`\n    DECLARE $login AS String;\n    DECLARE $password AS String;\n\n    $login = "${a}";\n    $password = "${m}";\n\n    SELECT user_id FROM auth \n    WHERE login = $login \n    AND password = $password\n`);var a,m;const y=yield u(d);console.log(i[0][0]);for(const n of r[0])n.image="https://storage.yandexcloud.net/balaganimg/user/"+n.user_id+".png";i[0][0].users={},console.log("ok"),i[0][0].users.data=r[0],i[0][0].users.count=r[0].length;const g=(({community_id:n})=>`\n    DECLARE $community_id AS String;\n\n    $community_id = "${n}";\n\n    SELECT e.* FROM \`event\` as e \n    Left Join \`event_community\` as ec\n    On e.event_id = ec.event_id\n    WHERE community_id = $community_id\n    AND status = "confirm";\n`)(t),_=yield u(g);for(const n of _[0])n.image="https://storage.yandexcloud.net/balaganimg/event/"+n.event_id+".png";i[0][0].events={},i[0][0].events.data=_[0],i[0][0].events.count=_[0].length;const E=(({community_id:n})=>`\n    DECLARE $community_id AS String;\n\n    $community_id = "${n}";\n\n    SELECT t.* FROM \`tag\` as t \n    Left Join \`community_tag\` as ct\n    On t.tag_id = ct.tag_id\n    WHERE community_id = $community_id;\n`)(t),l=yield u(E);i[0][0].tags={},i[0][0].tags.data=l[0],i[0][0].tags.count=l[0].length;const v=`\n    DECLARE $user_id AS String;\n\n    $user_id = "${i[0][0].organizer_id}";\n\n    SELECT * FROM users \n    WHERE user_id = $user_id\n`;const p=yield u(v);delete i[0][0].organizer_id,i[0][0].organizer={},i[0][0].organizer=p[0][0],i[0][0].image="https://storage.yandexcloud.net/balaganimg/community/"+t.community_id+".png",i[0][0].i_join=!1;for(const n of r[0])if(n.user_id==y[0][0].user_id){i[0][0].i_join=!0;break}return{statusCode:200,body:JSON.stringify(i[0][0])}}))};export{a as handler};
