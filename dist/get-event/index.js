import n from"ydb-sdk";import{z as e}from"zod";function t(n,e,t,i){return new(t||(t=Promise))((function(r,o){function s(n){try{a(i.next(n))}catch(n){o(n)}}function d(n){try{a(i.throw(n))}catch(n){o(n)}}function a(n){var e;n.done?r(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(s,d)}a((i=i.apply(n,e||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;const{Driver:i,TypedData:r,getCredentialsFromEnv:o,getLogger:s}=n,d=n=>r.createNativeObjects(n),a=n=>t(void 0,void 0,void 0,(function*(){const e=s({level:"debug"}),r=(()=>{const n=process.env.DB_ENDPOINT,e=process.env.DB_DATABASE,t=o();return new i({endpoint:n,database:e,authService:t})})();if(!(yield r.ready(1e4))){const n="Driver has not become ready in 10 seconds!";throw e.fatal(n),new Error(n)}const a=yield r.tableClient.withSession((e=>t(void 0,void 0,void 0,(function*(){var t;const i=yield e.prepareQuery(n);return(null!==(t=(yield e.executeQuery(i)).resultSets)&&void 0!==t?t:[]).map(d)}))));return r.destroy(),a})),u=e.object({event_id:e.string()}),c=function(n,e){return t(this,void 0,void 0,(function*(){const e=u.parse(n.queryStringParameters),t=atob(n.headers.Authorization.split(" ")[1]).split(":"),i=(r=t[0],o=t[1],`\n    DECLARE $login AS String;\n    DECLARE $password AS String;\n\n    $login = "${r}";\n    $password = "${o}";\n\n    SELECT user_id FROM auth \n    WHERE login = $login \n    AND password = $password\n`);var r,o;const s=yield a(i),d=(({event_id:n})=>`\n    DECLARE $event_id AS String;\n\n    $event_id = "${n}";\n\n    SELECT * FROM \`event\`\n    WHERE event_id = $event_id\n`)(e),c=yield a(d),v=(({event_id:n})=>`\n    DECLARE $event_id AS String;\n\n    $event_id = "${n}";\n\n    SELECT  u.user_id as user_id, name  FROM \`users\` as u\n    Left join \`participants\` as p\n    On u.user_id = p.user_id\n    WHERE event_id = $event_id\n`)(e),_=yield a(v);c[0][0].participants={},c[0][0].participants.data=_[0],c[0][0].participants.count=_[0].length;const E=(({event_id:n})=>`\n    DECLARE $event_id AS String;\n\n    $event_id = "${n}";\n\n    SELECT u.community_id as community_id, name FROM \`community\` as u\n    Left join \`event_community\` as p\n    On u.community_id = p.community_id\n    WHERE event_id = $event_id\n    And visible = true\n    AND status = "confirm"\n`)(e),g=yield a(E);c[0][0].communities={},c[0][0].communities.data=g[0],c[0][0].communities.count=g[0].length;const l=(({event_id:n})=>`\n    DECLARE $event_id AS String;\n\n    $event_id = "${n}";\n\n    SELECT t.* FROM \`tag\` as t \n    Left Join \`event_tag\` as ct\n    On t.tag_id = ct.tag_id\n    WHERE event_id = $event_id;\n`)(e),p=yield a(l);c[0][0].tags={},c[0][0].tags.data=p[0],c[0][0].tags.count=p[0].length;const S=`\n    DECLARE $user_id AS String;\n\n    $user_id = "${c[0][0].organizer_id}";\n\n    SELECT * FROM users \n    WHERE user_id = $user_id\n`;const m=yield a(S);delete c[0][0].organizer_id,c[0][0].organizer=m[0][0];const y=(n=>`\n    DECLARE $user_id AS String;\n\n    $user_id = "${n}";\n    SELECT event_id FROM favorite_user_event \n    WHERE user_id = $user_id \n`)(s[0][0].user_id),$=yield a(y);c[0][0].image="https://storage.yandexcloud.net/balaganimg/event/"+e.event_id+".png",console.log($);for(const n of c[0]){for(const e of $[0])if(n.isFavorite=String(n.event_id)==String(e.event_id),n.isFavorite)break;for(const e of _[0])if(n.isJoin=String(s[0][0].user_id)==String(e.user_id),n.isJoin)break}return{statusCode:200,body:JSON.stringify(c[0][0])}}))};export{c as handler};
